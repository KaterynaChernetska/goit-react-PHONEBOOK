{"version":3,"file":"static/js/634.f48771b5.chunk.js","mappings":"gNACA,GAAgB,UAAY,+BAA+B,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,UAAY,gC,iDCDjKA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,aAAaC,SAASC,KAAhC,EACtBC,EAAe,SAAAJ,GAAK,OAAIA,EAAMC,aAAaC,SAASG,SAAhC,EACpBC,EAAc,SAAAN,GAAK,OAAIA,EAAMC,aAAaC,SAASK,KAAhC,EACnBC,EAAe,SAAAR,GAAK,OAAIA,EAAMC,aAAaQ,MAAvB,EAGpBC,EAAyB,SAAAV,GAClC,OAAOA,EAAMC,aAAaC,SAASC,MAAMM,QAAO,qBAAGE,KAC5CC,cAAcC,SAASb,EAAMC,aAAaQ,OAAOG,cADR,GAGjD,E,SCHUE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYlB,GAE7B,GAA0BmB,EAAAA,EAAAA,UAAS,CACjCP,KAAM,GACNQ,OAAQ,KAFV,eAAOC,EAAP,KAAcC,EAAd,KAKMC,EAAmB,SAAAC,GACvB,IAAMC,EAASD,EAAMC,OAAOb,KACtBc,EAAaF,EAAMC,OAAOJ,MAEhCC,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,cAEGF,EAASC,GAEb,GACF,EA2BD,OACE,gBAAKE,UAAWC,EAAAA,UAAhB,UACE,kBAAMD,UAAWC,EAAAA,KAAUC,SA3BN,SAAAN,GACvBA,EAAMO,iBAEN,IACMC,EAAa,CACjBpB,KAFuBS,EAAjBT,KAGNQ,OAHuBC,EAAXD,QAMd,GAAIjB,EAAS8B,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,OAASoB,EAAWpB,IAAhC,IAMvB,OALAuB,IAAAA,OAAAA,QAAA,UAA2BH,EAAWpB,KAAtC,qCACAU,EAAS,CACPV,KAAM,GACNQ,OAAQ,KAIZJ,GAASoB,EAAAA,EAAAA,IAAWJ,IAEpBV,EAAS,CACPV,KAAM,GACNQ,OAAQ,IAEX,EAIG,WACE,eAAIQ,UAAWC,EAAAA,MAAf,0BACA,cAAGD,UAAWC,EAAAA,WAAd,mBACA,kBACED,UAAWC,EAAAA,MACXQ,KAAK,OACLzB,KAAK,OACLS,MAAOA,EAAMT,KACb0B,QAAQ,yHACRC,MAAM,yIACNC,SAAUjB,EACVkB,UAAQ,EACRC,YAAa,+BAEf,cAAGd,UAAWC,EAAAA,WAAd,qBACA,kBACED,UAAWC,EAAAA,MACXQ,KAAK,MACLzB,KAAK,SACLS,MAAOA,EAAMD,OACbkB,QAAQ,yFACRC,MAAM,+FACNC,SAAUjB,EACVmB,YAAa,6BACbD,UAAQ,KAEV,mBAASb,UAAWC,EAAAA,UAAeQ,KAAK,SAAxC,6BAMP,ECtFD,GAAgB,UAAY,gCAAgC,UAAY,gCAAgC,SAAW,+BAA+B,KAAO,2BAA2B,OAAS,6BAA6B,KAAO,4B,UCiBjO,MAfA,SAAmBM,GACjB,OACE,iCAAKC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,MAAMC,MAAM,OAAUJ,GAAlE,eACE,iBACEC,KAAK,eACLI,EAAE,uNAEJ,iBACEJ,KAAK,eACLI,EAAE,qGAIT,ECAYC,EAAc,WACzB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXX,GAAYY,EAAAA,EAAAA,IAAYb,GACxBG,GAAQU,EAAAA,EAAAA,IAAYX,GAEpB2C,GAAmBhC,EAAAA,EAAAA,IAAYP,GAMrC,OAJAwC,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,KAGF,gBAAKY,UAAWC,EAAAA,UAAhB,UACE,gBAAID,UAAWC,EAAAA,KAAf,UACGrB,IAAS,iEAAyCA,KAClDF,GACC,SAAC+C,EAAA,EAAD,KAEkB,OAAhBH,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBI,QAAS,GAAKJ,EAAiBK,KAAI,gBAAGC,EAAH,EAAGA,GAAI5C,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,OAAb,OACrD,gBAAIQ,UAAWC,EAAAA,SAAf,WACE,SAAC,EAAD,CAAWD,UAAWC,EAAAA,QACtB,kBAAMD,UAAWC,EAAAA,KAAjB,UAA4BjB,EAA5B,QACA,iBAAMgB,UAAWC,EAAAA,OAAjB,SAA8BT,KAC9B,mBACEQ,UAAWC,EAAAA,UACX4B,QAAS,kBAAMzC,GAAS0C,EAAAA,EAAAA,IAAcF,GAA7B,EAFX,sBAJgCA,EADmB,QAiBhE,EClDD,EAA4B,0BAA5B,EAA8D,sBAA9D,EAA4F,sB,UCM/EG,EAAS,WACpB,IAAM3C,GAAWC,EAAAA,EAAAA,MACXP,GAASQ,EAAAA,EAAAA,IAAYT,GACrBN,GAAWe,EAAAA,EAAAA,IAAYlB,GAU7B,OACE,iBAAK4B,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qCACA,kBAAQD,UAAWC,EACjBQ,KAAK,OACLzB,KAAK,OACLS,MAAOX,EACP4B,QAAQ,yHACRC,MAAM,yIACNE,UAAQ,EACRC,YAAa,4BACbF,SAnBe,SAAAhB,GACnB,IAAMH,EAAQG,EAAMC,OAAOJ,MAAMR,cAC5BV,EAAS8B,MAAK,qBAAGrB,KAAgBC,cAAcC,SAASO,EAA1C,IAInBL,GAAS4C,EAAAA,EAAAA,GAAUvC,IAHjBc,IAAAA,OAAAA,QAAA,UAA2Bd,EAA3B,2BAIH,MAgBF,E,oBCnBD,ICfA,GAAiB,ECejB,EFVA,SAA0BwC,EAAWC,GAOnC,OAN8B,SAAAnB,GAG5B,OAFmBzB,EAAAA,EAAAA,IAAY6C,EAAAA,KAEX,SAACF,GAAD,UAAelB,KAAY,SAAC,KAAD,CAAUqB,GAAIF,GAC9D,CAGF,CEED,EATqB,WACjB,OACI,iBAAKlC,UAAWC,EAAAA,KAAhB,WACK,SAACd,EAAD,KACA,SAAC4C,EAAD,KACA,SAACV,EAAD,MAGZ,GAC6C,Y","sources":["webpack://goit-react-PHONEBOOK/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-PHONEBOOK/./src/components/ContactsList/ContactsList.module.css?d8e9","components/IconPhone/IconPhone.jsx","components/ContactsList/ContactsList.jsx","webpack://goit-react-PHONEBOOK/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","HOC/WithAuthRedirect.jsx","pages/ContactsPage/ContactsPage.module.css","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"title\":\"ContactForm_title__jZguf\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","export const selectContacts = state => state.contactsData.contacts.items;\nexport const selectLoader = state => state.contactsData.contacts.isLoading;\nexport const selectError = state => state.contactsData.contacts.error;\nexport const selectFilter = state => state.contactsData.filter;\n\n\nexport const selectFilteredContacts = state => {\n    return state.contactsData.contacts.items.filter(({ name }) =>\n      name.toLowerCase().includes(state.contactsData.filter.toLowerCase())\n    );\n  };\n","import css from './ContactForm.module.css';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [value, setValue] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleFormChange = event => {\n    const target = event.target.name;\n    const inputValue = event.target.value;\n\n    setValue(prevState => {\n      return {\n        ...prevState,\n        [target]: inputValue,\n      };\n    });\n  };\n\n  const handleFormSumbit = event => {\n    event.preventDefault();\n\n    const { name, number } = value;\n    const newContact = {\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === newContact.name)) {\n      Notiflix.Notify.failure(`${newContact.name} is already in the contacts`);\n      setValue({\n        name: '',\n        number: '',\n      });\n      return;\n    }\n    dispatch(addContact(newContact));\n\n    setValue({\n      name: '',\n      number: '',\n    });\n  };\n\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={handleFormSumbit}>\n        <h2 className={css.title}>Add contact</h2>\n        <p className={css.inputTitle}>Name</p>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={value.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleFormChange}\n          required\n          placeholder={\"Enter your contact's name\"}\n        />\n        <p className={css.inputTitle}>Number</p>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={value.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleFormChange}\n          placeholder={\"Enter your contact's phone\"}\n          required\n        />\n        <button  className={css.submitBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteBtn\":\"ContactsList_deleteBtn__GO946\",\"container\":\"ContactsList_container__r+Txe\",\"listItem\":\"ContactsList_listItem__KzRCz\",\"name\":\"ContactsList_name__cbzy1\",\"number\":\"ContactsList_number__9xIVj\",\"icon\":\"ContactsList_icon__CcQur\"};","\nimport * as React from \"react\";\n\nfunction IconPhone(props) {\n  return (\n    <svg fill=\"none\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M22 12A10.002 10.002 0 0012 2v2a8.003 8.003 0 017.391 4.938A8 8 0 0120 12h2zM2 10V5a1 1 0 011-1h5a1 1 0 011 1v4a1 1 0 01-1 1H6a8 8 0 008 8v-2a1 1 0 011-1h4a1 1 0 011 1v5a1 1 0 01-1 1h-5C7.373 22 2 16.627 2 10z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M17.543 9.704c.302.728.457 1.508.457 2.296h-1.8A4.199 4.199 0 0012 7.8V6a6 6 0 015.543 3.704z\"\n      />\n    </svg>\n  );\n}\n\nexport default IconPhone;\n","import css from './ContactsList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectLoader,\n} from 'redux/contacts/selectors';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/contactsOperations';\nimport { Loader } from 'components/Loader/Loader';\nimport IconPhone from 'components/IconPhone/IconPhone';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoader);\n  const error = useSelector(selectError);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <ul className={css.list}>\n        {error && <p>Oops, some error occured... Message: {error}</p>}\n        {isLoading ? (\n          <Loader />\n        ) : (\n            filteredContacts?.length > 0 && filteredContacts.map(({ id, name, number }) => (\n            <li className={css.listItem} key={id}>\n              <IconPhone className={css.icon} />\n              <span className={css.name}>{name}:</span>\n              <span className={css.number}>{number}</span>\n              <button\n                className={css.deleteBtn}\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\",\"submitBtn\":\"Filter_submitBtn__lx1qw\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport Notiflix from 'notiflix';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const handleFilter = event => {\n    const value = event.target.value.toLowerCase();\n    if (!contacts.some(({ name }) => name.toLowerCase().includes(value))) {\n      Notiflix.Notify.failure(`${value} is not in the contacts`);\n      return;\n    }\n    dispatch(setFilter(value));\n  };\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}> Find contacts by name</h2>\n      <input  className={css.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder={\"Enter your contact's name\"}\n        onChange={handleFilter}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;","// extracted by mini-css-extract-plugin\nexport default {};","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactsList/ContactsList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport WithAuthRedirect from \"HOC/WithAuthRedirect\";\nimport css from './ContactsPage.module.css'\n\n\nconst ContactsPage = () => {\n    return (\n        <div className={css.hero}>\n             <ContactForm/>\n             <Filter/>\n             <ContactList/>\n        </div>\n    )\n}\nexport default WithAuthRedirect(ContactsPage, '/register');"],"names":["selectContacts","state","contactsData","contacts","items","selectLoader","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","number","value","setValue","handleFormChange","event","target","inputValue","prevState","className","css","onSubmit","preventDefault","newContact","some","contact","Notiflix","addContact","type","pattern","title","onChange","required","placeholder","props","fill","viewBox","height","width","d","ContactList","filteredContacts","useEffect","fetchContacts","Loader","length","map","id","onClick","deleteContact","Filter","setFilter","Component","navigateTo","selectIsLoggedIn","to"],"sourceRoot":""}